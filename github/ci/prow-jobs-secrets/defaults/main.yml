---
dockerUser: nobody
dockerPass: pass
quayUser: nobody
quayPass: nobody
installerPullToken: ""
githubToken: ""
githubCommenterToken: ""
gcsServiceAccount: ""

deploy_steps:
  - desc: Create Docker-kubevirtbot secret
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-docker-credential
      type: Opaque
      data:
        username: "{{ dockerUser | b64encode }}"
        password: "{{ dockerPass | b64encode }}"

  - desc: Create Quay-kubevirtbot secret
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-quay-credential
      type: Opaque
      data:
        username: "{{ quayUser | b64encode }}"
        password: "{{ quayPass | b64encode }}"
  - desc: Create OKD installer pull token secret
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-installer-pull-token
      type: Opaque
      data:
        token: "{{ installerPullToken | b64encode }}"
  - desc: Create OAuth secret in prow jobs namespace
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: oauth-token
      type: Opaque
      data:
        oauth: "{{ githubToken | b64encode }}"
  - desc: Create OAuth commenter secret in prow jobs namespace
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: commenter-oauth-token
      type: Opaque
      data:
        oauth: "{{ githubCommenterToken | b64encode }}"
  - desc: Create GCS service account config in prow jobs namespace
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: gcs
      type: Opaque
      data:
        service-account.json: "{{ gcsServiceAccount | b64encode }}"
  - desc: Create coveralls.io api token
    manifest_inline: |
      apiVersion: v1
      kind: Secret
      metadata:
        name: kubevirtci-coveralls-token
      type: Opaque
      data:
        token: "{{ coverallsToken | b64encode }}"
